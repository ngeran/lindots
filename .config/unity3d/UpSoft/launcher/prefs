<unity_prefs version_major="1" version_minor="1">
	<pref name="27fe2446d97f044f7b189bcd7ab46d3b-app-changelog" type="string">[{"id":1,"label":"1-12-904","changelog":"Initial release candidate upload","publish_date":0,"content_guid":"003e7b5d-5c1e-49f2-8dcb-3171d08606a5","content_meta_guid":"0a79552b-2e1e-4b55-ac06-25b9a74860df","diff_guid":null,"diff_meta_guid":null,"draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-05-08T23:46:01.536Z","processing_finished_at":"2018-05-09T00:04:22.927Z","can_be_imported":false},{"id":2,"label":"1-12-0-906","changelog":"2.5mm lens update\r\nAdd FireDrill track to Large Carpark\r\nSwitch to production databases","publish_date":0,"content_guid":"5bf4e5f1-a4f9-443b-9d49-44dde200ce47","content_meta_guid":"7158264c-5f8d-4cfc-8392-ce11a80772e3","diff_guid":"514074d3-cf6c-4b22-9ecb-ce2bc5df0551","diff_meta_guid":"cb93fa9e-753f-49fd-bb37-ef6a8407d51e","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-05-09T19:38:02.847Z","processing_finished_at":"2018-05-09T20:00:39.728Z","can_be_imported":false},{"id":3,"label":"1-12-0-915","changelog":"Check and fix all track anomalies with rotated objects\r\nUpdated 2.3mm true lens\r\nImproved event mode notifications for red flag / end of race","publish_date":0,"content_guid":"63111279-9ab1-4aca-963e-4d4f72a49350","content_meta_guid":"bb2fab8f-0a1b-4497-b8e5-fec026071171","diff_guid":"c1407224-e66e-4211-9271-3b6d07103a33","diff_meta_guid":"295ae416-4aa8-40d1-b345-0eaf8aa01fe7","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-05-11T01:19:01.875Z","processing_finished_at":"2018-05-11T01:41:59.209Z","can_be_imported":false},{"id":4,"label":"1-12-0-916","changelog":"Small correction to red neon strip in track editor \r\nFix over sensitivity to crashing on the Evolution X1 quad","publish_date":0,"content_guid":"57725881-4252-42ed-b53b-dc9d304e0bc3","content_meta_guid":"09c7e2b1-cea8-442b-a6a6-8f230950d386","diff_guid":"8fc48db0-0ebf-46ce-ac1b-11c7c357a33a","diff_meta_guid":"a757cc42-50a5-448d-8d86-b163bffc4120","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-05-11T15:58:30.995Z","processing_finished_at":"2018-05-11T16:20:51.981Z","can_be_imported":false},{"id":5,"label":"1-12-0-922","changelog":"Fix Ragge 200h undercart which was too sensitive to crashing \r\nFix prop sizes below 5045 that were causing instability in the simulation \r\nSlow down multiplayer data rate to stop network disconnects \r\nFix language translation error on scenery selection page","publish_date":0,"content_guid":"860cfd66-d0f0-49b7-8aa9-14823485e550","content_meta_guid":"d261625d-ed73-46b9-afa6-ad70dddaae9f","diff_guid":"f8591ac1-9b58-4129-97fa-911c77b06615","diff_meta_guid":"2157f23e-ed3a-4300-b29e-762393ec267c","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-05-12T19:09:05.606Z","processing_finished_at":"2018-05-12T19:31:30.113Z","can_be_imported":false},{"id":6,"label":"1-12-0-998","changelog":"Upgraded network client to stop disconnects\r\nControls latency improvements\r\nSpectator camera updates and fixes\r\nOfficial track automatic downloads enabled\r\nBetter handling of controller when tabbing to other applications\r\nSlider to adjust the effect of battery weight or turn it off entirely\r\nSlider to adjust prop wash effect or turn it off entirely\r\nNetwork diagnostic dialog added to FPS display (F12)\r\nFix players joining and getting stuck in spectator mode\r\nFix track save in multiplayer\r\nFix Betaflight 3.3 camera compensation\r\nRemove three lap mode from multiplayer - it should only be available single player\r\nFix quad scaling with distance in multiplayer\r\nHide irrelevant UI when spectating other players\r\nWhite quad colour added\r\nFix permanent crash status in auto mode multiplayer when single player crash restart is enabled\r\nFix various null reference issues causing unexpected behavior","publish_date":0,"content_guid":"91a0de79-72d4-45d5-b699-cb5d7a0a74ff","content_meta_guid":"bde9ee99-1988-411c-b14f-a1efe003030d","diff_guid":"a54fc243-d32d-4f56-b03a-a6b4ab7bb580","diff_meta_guid":"e21e63ef-59e2-446c-8fc7-ca326fb76fac","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-06-01T15:04:37.714Z","processing_finished_at":"2018-06-01T15:27:00.809Z","can_be_imported":false},{"id":7,"label":"1-12-0-1006","changelog":"Fix angle and horizon modes\r\nFix keyboard shortcuts display\r\nFix spectator cameras for user defined track cameras\r\nFix missing language translations","publish_date":0,"content_guid":"69b4396a-f292-45f8-b4c1-019c795d4198","content_meta_guid":"aa4d5b88-7fc7-4ede-ae7f-269eb2e9a386","diff_guid":"55d161e8-228a-4123-a1f2-22094b9f1e10","diff_meta_guid":"6383ff0f-7edf-405d-af10-91ee983638a5","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-06-02T22:49:31.374Z","processing_finished_at":"2018-06-02T23:12:03.291Z","can_be_imported":false},{"id":8,"label":"1-12-0-1028","changelog":"Network disconnect fix \r\nThrottle curves fix \r\nImplement BetaFlight anti-gravity","publish_date":0,"content_guid":"fc79b36b-3340-44c6-aa80-3a9273cc1a0f","content_meta_guid":"f816baa6-8c71-416e-9d24-32ca835d616e","diff_guid":"f0e8483f-5bb8-44e6-a78b-4c84d7cd9ceb","diff_meta_guid":"528ff72b-3064-456d-99f9-da5601795cbb","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-06-09T13:10:03.041Z","processing_finished_at":"2018-06-09T13:32:55.582Z","can_be_imported":false},{"id":9,"label":"1-12-0-1049","changelog":"Basketball Stadium release\r\nAnti-gravity fixes\r\nBattery Mass Effect fixes\r\nDrag fixes\r\nRe-enable ground effect\r\nFix keyboard shortcuts","publish_date":0,"content_guid":"ce1ea765-2da6-4055-a791-8b9b03448466","content_meta_guid":"f4d9058f-6e85-48d2-9ec6-83938ce43e2a","diff_guid":"1da89dc1-e96e-47f6-8f27-0e1d172eb0c9","diff_meta_guid":"c1f32e82-f7f3-46e3-bfd6-4b3bd4663cae","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-06-16T02:20:07.714Z","processing_finished_at":"2018-06-16T02:44:07.332Z","can_be_imported":false},{"id":10,"label":"1-12-0-1050","changelog":"Fix some bad collision meshes in the new stadium","publish_date":0,"content_guid":"7be549a5-d2b4-48d0-a0d1-8b8c06792284","content_meta_guid":"347a33f1-1875-48b4-8067-291476d57f41","diff_guid":"dccd0689-7218-4d3c-a78a-4286a6c85519","diff_meta_guid":"0764f30a-dd02-4de4-baf7-a41e594a6154","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-06-16T04:50:52.780Z","processing_finished_at":"2018-06-16T05:14:26.996Z","can_be_imported":false},{"id":11,"label":"1-13-0-1375","changelog":"New kwads - Karearea Talon, Flynocerous Aether and Wonderous Drones Butterfly EVO\r\nTwo new sceneries - Bando and Indoor GoKart\r\nUsing splines in track editor optimised to not cause computer slow down when building tracks\r\nHuge collection of Bando track editor objects added\r\nBuild real life tracks using an overhead image of the track in track editor as an overlay\r\nAll new UI for track editor \r\nAnimation of any track editor objects using splines\r\nMetric and Imperial measurements for track editor\r\nNew leaderboard UI within the sim to check player leaderboard positions\r\nPersonal best 1 lap and 3 lap times held locally for all tracks in track selection panel\r\nPersonal best times highlighted in orange in the race summary dialog\r\nNew clone in place function in track editor\r\nThrust, translational lift and aerodynamic updates for more realism\r\nLocalize message boxes and add more language translations in to the sim\r\nUpgrade video playback in tutorials section to HD 720P\r\nNew Relay functionality for team racing\r\nBrightness and LUT selection buttons added to flight mode\r\nTrue lens quality settings\r\nUpdates to betaflight for I term handling\r\nFixes to ground effect\r\nNvidia highlights added to Football Stadium and Empty Scene Day (experimental code)\r\nProp damage handling improved\r\n5050 and 5150 props added\r\nFix transmitter/controller dead zone issues so that it is automatically set correctly by default\r\nLine of sight camera position can now be set to custom positions (shift L)\r\nMake stick visualisation stay on when turned on rather than turn off after every race\r\nAdd message when joining manual mode sessions to remind that arm and turtle switches are needed\r\nFix tree colliders in countryside scene\r\nLots of small miscellaneous fixes to the UI","publish_date":0,"content_guid":"7c4080a9-5150-49f3-882c-bb67062628de","content_meta_guid":"617ba5be-15d2-49aa-8fd3-f80a7864e071","diff_guid":"09e2bd02-7fe0-477d-9037-ca9685f1a576","diff_meta_guid":"c7b2a396-733f-458e-83fd-db82db3b1696","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-10-24T22:06:23.978Z","processing_finished_at":"2018-10-24T22:31:38.704Z","can_be_imported":false},{"id":12,"label":"1-13-0-1397","changelog":"GoKart and Car track editor objects \r\nCastle track editor objects \r\nThree new optional lower physics loop rates \r\nUI updates for 1280*1024 resolution \r\nTriple ladder gate \r\nNew banner track editor objects \r\nMany new fast foliage objects for track editor \r\nFix to spline animation to make sure set animation speeds are consistent across different frame rates\r\nFix to help UI in Bando scene","publish_date":0,"content_guid":"0a8f491e-9fa3-4fc3-9d26-741e8fa4fa38","content_meta_guid":"61cffaeb-a086-40d8-ad9d-368475e07c3b","diff_guid":"bdc87c19-e37c-40e5-a77e-fd268f26bad7","diff_meta_guid":"26e5dc5e-6179-40c7-baa1-568d3cd154cd","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-11-08T20:11:23.524Z","processing_finished_at":"2018-11-08T20:39:14.667Z","can_be_imported":false},{"id":13,"label":"1-13-0-1402","changelog":"Fix animation causing frame rate to cap at 60 fps","publish_date":0,"content_guid":"7be4f50f-0ce7-4558-919e-40e30d3a9b69","content_meta_guid":"085f9e76-e6b1-4e3f-90e0-af84fd678f79","diff_guid":"a786cb12-b383-4e83-83f8-8b21f483394d","diff_meta_guid":"0ce5625f-5dab-4487-83ec-cf9f35d66da9","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-11-10T02:17:40.167Z","processing_finished_at":"2018-11-10T02:45:07.759Z","can_be_imported":false},{"id":14,"label":"1-13-0-1436","changelog":"Improve efficiency of animations so they no longer impact frame rate \r\nRemove particle systems from GoKart and Car at lower quality settings \r\nNew grid objects for track editor \r\nUpdate graphics rendering to improve quality and realism \r\nFix some missing messages that were showing as blank message boxes \r\nUpdate time attack so it works correctly and also shows internally held times for tracks \r\nImprove keyboard shortcut help layouts \r\nFix language translation","publish_date":0,"content_guid":"1b50a2fc-93da-41f1-bee2-975413a3f5f6","content_meta_guid":"662e3eb9-1240-4bc8-ace4-f3ad2c3d76d2","diff_guid":"6750219c-928b-4ce2-ab2b-8094f55600af","diff_meta_guid":"faae0c6d-caee-4e2c-8add-29d5731126ed","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-11-26T13:12:47.383Z","processing_finished_at":"2018-11-26T13:39:18.892Z","can_be_imported":false},{"id":15,"label":"1-13-0-1436a","changelog":"Restore user settings","publish_date":0,"content_guid":"43e80b3a-271b-4cc6-97a8-3c3e5a90e779","content_meta_guid":"11c4c1c8-1783-42a9-baff-f65f3fb8280e","diff_guid":"2f49cffb-a4ac-4367-81c5-517eaf0b11f4","diff_meta_guid":"6eb573bb-5932-4fe6-9e9e-d5ede734ec0f","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-11-26T20:10:20.370Z","processing_finished_at":"2018-11-26T20:38:46.912Z","can_be_imported":false},{"id":16,"label":"1-13-0-1440","changelog":"Fix near camera clipping when spectating other players \r\nFix controller configuration so it only detects axis and not buttons \r\nFix to stop colliders becoming negatively scaled","publish_date":0,"content_guid":"9b7e152b-6d27-4df8-98c2-23bfd3d99715","content_meta_guid":"c7e5b4e3-3fb8-4af7-a1cc-99ff0032a79c","diff_guid":"2b527b32-6ce0-4770-b7ed-ebfde8920dd6","diff_meta_guid":"06f612f2-fd05-4994-91c3-4811e9904dca","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2018-12-14T16:51:24.735Z","processing_finished_at":"2018-12-14T17:19:36.895Z","can_be_imported":false},{"id":17,"label":"1-14-2-109","changelog":"New Features\r\n\r\nThe very latest Unity game engine powering the sim\r\nFavourites capability for tracks\r\nNew dynamic weather scene\r\nMultiplayer name tags\r\nFPVR track assets\r\nXFly track assets\r\nNew gate indicators for true lens\r\nAbility to move chat window and have it keep it’s position across scene / track changes\r\nBetaflight button to copy profile to all quads\r\nLonger multiplayer quad trails\r\n\r\nRemoved Features\r\n\r\nBuilt in voice communication\r\nSeveral old / out dated quads from the quad selection\r\n\r\nProblems fixed\r\n\r\nOSX Mojave issue with scene loading hangs resolved\r\nBest lap and 3 lap times getting reset on sim restart\r\nGhost flights getting lost due to track id’s changing on sim restart\r\nFisheye not working in all scenes\r\nIncorrect quad weight in single class for the battery size mounted\r\nColliders on football stadium lights that should not be there\r\nChanging between 2 minute timed and lap mode messing up the lap count\r\nFastest mode engaging vsync when it shouldn’t\r\nSubway train colliders missing or incorrect\r\nBattery death during a race causing invalid times to be recorded\r\nGate count over 100 causes a line overflow in the player positions dialog\r\nQuads not landing properly and turning upside down\r\n\r\nImprovements\r\n\r\nTexture usage and memory usage reduced\r\nUI allocations reduced to zero to get rid of micro stutter\r\nTurn off trails for player during reset processing\r\nImprove video player for tutorials\r\nAll scenes worked on to improve lighting\r\nController latency reduced significantly\r\nTrue lens modified to support 16:9 or various aspect ratios (within reason)\r\nCountryside performance improved and scene reworked\r\nVarious optimisations and performance improvements to create a smooth simulation experience","publish_date":0,"content_guid":"4d7e5e3a-9640-465d-84ab-29ec409bd574","content_meta_guid":"bc20bb2c-362c-4a9e-b2df-3d6806426c01","diff_guid":"3b12723c-a40e-4a54-9c4c-921f8de42eaa","diff_meta_guid":"4ef946f0-043f-4190-98da-516df9ddcad1","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-02-22T22:19:32.487Z","processing_finished_at":"2019-02-22T22:46:56.601Z","can_be_imported":false},{"id":18,"label":"1-14-2-126","changelog":"True lens gate indicators improved\r\nFixed the missing gate indicator on the green hoop gate - fixes races not starting and various issues\r\nUpdate screen resolution handling so unity handles all of it\r\nFix the majority of the issues with true lens and water in River2 - there is still one little issue with reflection shadowing\r\nFix official tracks not appearing immediately when they are downloaded\r\nFix LUT selection in game so it displays the LUT name\r\nUpdate single class leaderboard racing so that every lap in single class you are informed of your potential position on the leaderboard\r\nImprove neon effects in dynamic weather (will not have any affect if you are using true lens)","publish_date":0,"content_guid":"471c2edb-264b-42ff-a35b-c3df61ad075c","content_meta_guid":"91e5ae8e-6fb3-4333-ab37-e0ccca09cafe","diff_guid":"99445427-5d34-465a-a4bd-2c495f82e6ef","diff_meta_guid":"dbccaa4e-72a8-4850-843b-a253cc449a36","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-02-28T21:46:51.859Z","processing_finished_at":"2019-02-28T22:04:13.059Z","can_be_imported":false},{"id":19,"label":"1-14-2-128","changelog":"Fix connection offline error \r\nRe-enable static batching","publish_date":0,"content_guid":"bf1fe7a2-81ed-4cd9-901c-59caae01ec31","content_meta_guid":"5b4a2b11-9acc-4fc3-a10d-d844a88293c5","diff_guid":"af4c90b1-1262-4833-8cc1-f83ca9b41bad","diff_meta_guid":"c00fc2b2-3635-4942-a19f-332745c787de","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-03-10T15:37:01.909Z","processing_finished_at":"2019-03-10T15:54:04.631Z","can_be_imported":false},{"id":20,"label":"1-14-2-181","changelog":"Remove Nvidia highlights from the sim - it isn't used and will speed up load times\r\nUpgrade terrain shaders to latest levels\r\nEnable terrain instancing (performance upgrade)\r\nFix all gate indicators to be centralised on the gate\r\nAllow gate indicator colour to be selected in options\r\nFix gate indicators to not move around with fisheye lens enabled\r\nFix track editor shortcuts display\r\nAdd missing shortcuts to help \r\nFix using image overlays in track editor so they work on unity 2018\r\nFix drag settings getting reset to default in open class\r\nWhen trails are disabled also disable for ghosts\r\nShift C will reset the chat window to default position\r\nFix one of the castle wall colliders that was too large\r\nStop a joining player from messing up race start and causing race start to no longer function\r\nStop hang on loading screen if you join a named session before the server is ready\r\nScale track editor better for lower resolutions\r\nStop the sim from changing to native screen resolution on it's own\r\nUse a higher performance shader for fast and fastest mode on River2\r\nFix missing battery meter on Bando scene\r\nFix 1280*1024 UI scaling\r\nFix listing for ghost flights so they display correctly for all resolutions\r\nTurn off retina mode for OSX","publish_date":0,"content_guid":"9ee37877-c86c-4872-afe0-b9cd13d93486","content_meta_guid":"047929c2-f16e-4647-ac6d-a51bf192324a","diff_guid":"bc6e3df1-af79-4040-8220-abca641d30fd","diff_meta_guid":"8e006974-e605-45fa-824e-ed88ee61ca2f","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-03-23T19:41:13.383Z","processing_finished_at":"2019-03-23T19:59:09.612Z","can_be_imported":false},{"id":21,"label":"1-14-2-320","changelog":"Wind implementation for all outside scenes and multiplayer\r\nAdditional fixes to keep the set display resolution\r\nFix to missing colour grading\r\nNew dialog and process for setting up transmitters / controllers\r\nSupport for buttons in the new transmitter setup process\r\nPropeller profiles added\r\n5141 and 5146 props added\r\nWindsock and MultiGP dive gate added to track editor objects\r\nNew carpark area in Large Carpark\r\nFixes to contols latency to improve it across the board but especially for low specification / low frame rates\r\nUpdate single class settings \r\nThree new quads - AttoFPV Photon, AstroX SL5, VelociDrone Velocity\r\nNew shader quality option for faster GPUs\r\nFixes to countryside to improve frame rates\r\nUpdate of Unity to latest levels\r\nFix quads being able to jump the start of the race\r\nFix relay reset issues for battery charging\r\nUpdate to main HUD UI to make it less intrusive and more like real life FPV UI\r\nChanges to aerodynamics to improve thrust response","publish_date":0,"content_guid":"ae76faf0-1780-47c3-af99-52d1424c1cfc","content_meta_guid":"b77a63e2-d351-425b-a365-c2bda66a3c3c","diff_guid":"dbad5ac3-8a48-4adf-9ea4-d7714d4fd664","diff_meta_guid":"b4f8726a-369e-41bd-a58f-c2713489d45c","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-05-20T16:44:50.600Z","processing_finished_at":"2019-05-20T17:18:34.603Z","can_be_imported":false},{"id":22,"label":"1-15-0-716","changelog":"Features\r\n\r\nNew scenery and track selection - ability to search tracks, see new tracks easily\r\nQuad settings changed to be per quad instead of one set of settings for all quads\r\nNew quad showroom for picking models you wish to fly\r\nMultiple versions of the same model can be configured\r\nConfigure quads from the main menu as well as flight mode\r\nSlam Nasty 5inch quad\r\nUpdates to water rendering for better looking rivers\r\nImproved rendering for sceneries with a lot of grass / tree detail\r\nAbility to select a low specification or a gaming renderer for trees / grass\r\nLighting updates across many scenes\r\nNew sound system for quad sounds\r\nUpdates to all props to make them have more unique and more accurate flight characteristics\r\nAbility to set a gate as being both start and finish gate in a track\r\nNew reverb effects for sceneries\r\nSeveral new track editor objects / gates\r\nOptimise some track editor textures for better flight mode performance\r\nQuick start button to just load the last quad, scene and race settings you were last flying in single player\r\nAdd support for premium content\r\n\r\nPremium Content - to be enabled soon\r\n\r\nMega Class quads - Dreadnaught, CannonBall, BroadSword, SourceX, Ostrich Air One\r\nChampions Series Sceneries - Krvavec, La Mothe, Castle Sneznik\r\n\r\nFixes\r\n\r\nFixed recharge gate to not be opaque with true lens\r\nStop immediate start mode in single player from registering a crash at race start\r\nFix camera getting messed up when hitting key A and S simultaneously\r\nIf the sim times out at startup due to network being blocked - issue a message indicating the problem instead of hanging forever\r\nFix player tags so that when 7 players are flying one player isn't missing their player tag\r\nNew version should function with OSX Catalina\r\n\r\nKnown issues\r\n\r\n2 minute race mode not working correctly when using a combined start / finish gate - to be fixed in a small patch update later","publish_date":0,"content_guid":"9e817b71-16f0-482e-8d47-95612e11b86d","content_meta_guid":"36fb1b26-3000-4565-8a0a-cf2fdaf23fdd","diff_guid":"f4279385-facc-49ea-b96a-a17d54b5cccf","diff_meta_guid":"61849e95-5d43-46c7-ba1b-8463aae6757a","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-08-28T22:50:20.495Z","processing_finished_at":"2019-08-28T23:15:51.733Z","can_be_imported":false},{"id":23,"label":"1-15-0-824","changelog":"Features\r\n\r\nMove 'add quad'  button to the loadout window instead of main menu front page\r\nNew leaderboard update dialog showing players close to your uploaded time\r\nHuge perfomance increase in scene load times\r\nMassive reduction in GPU texture memory to make the sim run better\r\nNew custom class mode for spec racing - all players will match the race managers quad settings in this mode\r\nCap main menu to 60 fps as huge frame rate is not needed in the main menus\r\nAuto enable pilots in spectator mode when a racing slot becomes free\r\nNew short cut key (J) to hide / show leaderboard times dialog\r\nNew short cut key (shift M) to move the tx stick display to middle or bottom of screen\r\n\r\nBug fixes\r\n\r\nHuge update to anti-cheat coding.\r\nFix prop damage to work consistently\r\nFix WDC gate textures which were upside down\r\nFix min throttle quad setting which was stuck on 1070 and not working\r\nFix KDRA startgrid so quads don't fall off it\r\nFix missing track editor shortcuts and help shortcuts in some scenes\r\nFix saving of tracks from a multiplayer session\r\nFix voice announcements to work in multiplayer for everyone not just race manager\r\nFix trails to not display when resetting for race start\r\nFix invalid/incorrect times from being uploaded to leaderboards\r\nFix start / finish gates to work correctly\r\nFix ghost to work correctly with start finish gates\r\nFix multiplayer position reporting on start / finish gate tracks where the player order gets muddled up\r\nFix quad audio from playing after leaving a scene\r\nFix lighting in indoor gokart scene\r\nFix missing colliders on orange stripey ribbon track editor object\r\nFix FPVR flag\r\nFix ranking on start / finish gate tracks\r\nFix ground effect so it works properly for the larger mega class quads","publish_date":0,"content_guid":"e93c9793-e3f5-4bb9-9a27-1e6d989c3fc9","content_meta_guid":"d7776041-74c3-4ce0-9b01-de8ad19c3ef1","diff_guid":"036885a4-331d-407f-80ed-464e84b0b6f1","diff_meta_guid":"2ef56f5e-8aff-4369-854c-923b7406c37b","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-10-10T19:16:22.253Z","processing_finished_at":"2019-10-10T19:38:52.231Z","can_be_imported":false},{"id":24,"label":"1-15-0-843","changelog":"Fix several voice announcement issues\r\nFix in game track change messing up what track is actually selected for time recording and upload\r\nFix downloaded tracks not appearing in the track list\r\nFix floor ribbon selection in track editor\r\nFix time upload feedback panel to work with three lap mode correctly\r\nAdd Events and sim social media links to front page","publish_date":0,"content_guid":"82e235fd-2ba8-4a8c-b597-b013c21f7c2d","content_meta_guid":"dc11c664-c3f5-4099-b22d-aebc3d6220b4","diff_guid":"38b707e0-79ac-4747-898f-8f30262f3e3d","diff_meta_guid":"9fb99f0f-7cfe-4c58-ba2e-8e7d6ed1739f","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-10-16T09:34:48.595Z","processing_finished_at":"2019-10-16T09:57:28.833Z","can_be_imported":false},{"id":25,"label":"1-15-0-1145","changelog":"Yakuza Fujin added\r\nCarolina XC added\r\nIFlight IXC13 added\r\nEMAX TinyHawk added\r\nBetaFPV 75X added\r\nCrazybee 1s Brushless added\r\nHappyModel Mobula 6 added\r\nBando, Coastal, Industrial Wasteland - updated for micro quads\r\nMicro Pack - House, Library, Night Club added\r\nFix graffiti in Bando to be much more visible/vivid\r\nNew feature to allow the sim database to be entirely reset to defaults (recovery option for broken databases)\r\nStop pack from being able to run flat in relay while waiting to fly\r\nStop reset bug if you crash while flying through the recharge gate in a Relay\r\nFix trails to work consistently\r\nUpdate trails sizing for all quad sizes (5inch/Micro/Mega)\r\nFix camera angle being set incorrectly during ghost playback\r\nWrite track name at the top of the leader board summary when submitting to leader board\r\nFix over zealous voice announcements and incorrect announcements for lap times\r\nFix custom class option missing when accessing ingame scenery change for a session started as custom class\r\nSeparate roll and pitch pids so they can be set separately\r\nUpdate all gate indicators for better centralisation in gates and when rotating gates\r\nFix chatbox overflow where text goes missing\r\nFix problem of race not being able to be started due to race ranking failing due to a player leaving before the end of a ranked race\r\nUpdate recharge gate lighting and hitbox, so crashing into the recharge gate does not work\r\nNew static cross hair for the HUD with no horizon line\r\nFix pids rc expo so you can type into it instead of having to use the arrows\r\nUpdate facebook link and discord server links on sim main page to be clickable\r\nFix scene exposure not working correctly when switching scenes ingame\r\nMake camera compensation / fpv angle mix a quad level parameter\r\nAllow airmode to be turned on / off per quad in quad settings\r\nUpdate angle mode to have angle limit that can be set\r\nUpdated accelerometer for angle mode with self righting if accelerometer gets confused\r\nUpdate to crashes to stop excessive spinning\r\nFix custom class so it is kept across a race manager change\r\nAutoswitch rate profiles when changing flight mode for micros so that acro / angle automatically take advantage of project mocking bird rates / settings\r\nMove flight mode to be quad specific - so if you change from a quad you fly angle to a 5inch rate quad the mode is held on the quad rather than system level and changes automatically.\r\nUpdate quad add page to list quads by type and then by alphabetical name\r\nFix legacy flight controller\r\nFix various errors that lead to an invalid time being uploaded to the leaderboard\r\nFix various cheats that allow access to quad settings in single class or jumping the start\r\nNew gates section for micro gates in track editor\r\nNew newbeedrone, betafpv and neon animated gates for micro quads\r\nFixes to track editor UI for gate sizes information\r\nNew super slow zoom speed for zoom speed 1 (for working on micro quad scenery)\r\nUpdate track upload so tracks can be categorised by quad they were designed for (5inch, micro, mega)\r\nFix ribbon object which was unselectable after being added to a scene\r\nScale gate lighting when gates are scaled down / up\r\nVarious other ui fixes to make track editor work as designed","publish_date":0,"content_guid":"c45d91f1-d9b0-4743-a827-efaf10924d6b","content_meta_guid":"494f89b2-b916-4284-92a7-6bc4fc4fac23","diff_guid":"7ded8f34-b5fe-4557-9d6c-a2e7cbed311b","diff_meta_guid":"1ea03704-cac3-4d88-ac8f-ad6f17cf3b87","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-12-17T14:37:49.891Z","processing_finished_at":"2019-12-17T15:12:33.936Z","can_be_imported":false},{"id":26,"label":"1-15-0-1155","changelog":"Update Tinyhawk and BetaFPV 75 to set power to more representative of a modern 2S\r\nMake crosshair remember it's settings\r\nFix spectator cams on industrial wasteland\r\nUpdate BetaFPV 75 undercarriage to be a little more stable","publish_date":0,"content_guid":"ebb4a84e-fb68-472d-90f2-5409f73e8f60","content_meta_guid":"c596e684-ccc6-43fc-9769-c4f896014f23","diff_guid":"70d23f1e-257e-41d9-80d8-c83f5864e842","diff_meta_guid":"cc75ee0f-1c84-4ea4-a07d-28b47f2edf7e","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2019-12-19T17:17:35.075Z","processing_finished_at":"2019-12-19T17:46:01.945Z","can_be_imported":false},{"id":27,"label":"1-15-0-1338","changelog":"New multiplayer session join handling - Unresricted and Restricted for lag free sessions\r\nAbility to filter tracks by class - unspecified, mega, micro\r\nUpdate crosshair to be a simple cross without the active horizon\r\nMake camera angle specific to each quad rather than global\r\nMake selected pid profile quad specific and not global \r\nF5 key to recover gate order if multiple gate 1’s exist\r\nNew aeroplanes for track editor\r\nNew concrete pipe for track editor\r\nNew flashing neon micro gates\r\nQuad being flown shown alongside the player in the players in session panel \r\nReset all moving objects at race start so that all players see the same animated objects in the same place when racing multiplayer \r\nMicro premium pack - BetaFPV Meteor 65, NewBeeDrone BeeBrian 1S Brushless\r\nFix tutorial system to play videos in an external browser rather than within the sim\r\nFix micro quad prop wash to be more effective\r\nRecalculate gate orientation each frame to allow for rotating / moving gates\r\nReduce bloom in Library / House to make neon lights less bright\r\nFix track upload categorisation buttons for 4:3 resolution where they were invisible\r\nFix micro quads not flying stable on crazy low physics\r\nFix RC Rate on pitch as it was still using roll values\r\nFix duplicate gate 1’s when using start/finish gates and the test fly function in track editor\r\nUpdate micro gates to stop resets inside walls when wall mounted\r\nFix three lap leaderboard deltas when uploading a three lap time\r\nFix workbench from displaying two models at once\r\nFix airmode getting turned off when changing pid values\r\nFix the link to the discord server on the sim home page\r\nReduce overhead of UI on frame rate (more efficient UI)\r\nUpdates to custom class to make sure it is visible in the change track dialog  ingame\r\nFix session join to use custom class correctly when using named session join button\r\nFix shortcuts still being enabled when typing track name in track editor to save a track","publish_date":0,"content_guid":"eb7928fe-4232-4212-9da3-d39e80eee51f","content_meta_guid":"27953644-33ed-4174-aba3-c9a6de993718","diff_guid":"ecb5229e-cc19-48de-9a81-b0b769ba75aa","diff_meta_guid":"7630cf08-08d6-4cc1-97e1-d7a8b656957f","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-01-23T13:50:26.592Z","processing_finished_at":"2020-01-23T14:18:48.596Z","can_be_imported":false},{"id":28,"label":"1-15-0-1339","changelog":"Fix pid profile auto switching on micro quads","publish_date":0,"content_guid":"e788ac2e-e15e-417f-b230-ff5ddadb0f12","content_meta_guid":"7f673438-9421-4d4f-8ccf-8e73efb466e6","diff_guid":"fa90176a-d980-4e94-87f3-ade2d5994b06","diff_meta_guid":"6c2d7aa6-bffb-40fa-a580-ce30cebc268c","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-01-24T14:42:26.019Z","processing_finished_at":"2020-01-24T15:11:09.047Z","can_be_imported":false},{"id":29,"label":"1-15-0-1455","changelog":"1) Fixes to multiplayer for restricted join and unrestricted join. All known and reported issues are resolved in beta test. (Including the chat box spam bug).\r\n2) True lens available to use when test flying a track from track editor\r\n3) New Spanish DDC gates and flags\r\n4) Update to track shortcuts to make sure all keys are represented\r\n5) Fix to crash restart mode so that on restart the reset is fully stable and no misbehaving of the quad (wobbling or crashing again)\r\n6) Fix quad re-spawn issaue when flying multiplayer (quad getting thrown across the map on reset)\r\n7) Fix player tags to display correctly even for players using hide from friends\r\n8) fix issues of players being invisible when racing\r\n9) Fix tag missing for a player when racing\r\n10) Fix custom class for multiplayer racing to behave correctly\r\n11) Fix spline animation taking too long to initiate\r\n12) Fix pids/rates getting saved to the wrong profile (Pids/rates getting lost after changing scene bug)\r\n13) Allow players waiting to join in restricted multiplayer mode to access spectator mode (S key)\r\n14) Further reduce join lag for restricted mode - beta testers reported no ability to detect joining players or lag from joining or leaving players\r\n15) New bell sound for joining players in restricted join","publish_date":0,"content_guid":"a52101b5-e8d8-47c8-b1d4-afc8ab7e96eb","content_meta_guid":"bffab295-1ea7-46e4-87e3-ace5e75fd16e","diff_guid":"901e67e7-cb24-4ea7-9e22-94b83e9f367d","diff_meta_guid":"c7ad275a-4935-4608-8466-4479a7e1df0d","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-02-07T14:43:32.389Z","processing_finished_at":"2020-02-07T15:12:42.070Z","can_be_imported":false},{"id":30,"label":"1-15-0-1538","changelog":"Re-enable preload in manual arming\r\nFix chat becoming unresponsive in multiplayer\r\nFix multiple issues caused by restricted join network object getting deleted by accident\r\nFix a bug where fisheye effect wasn't always available in all scenes\r\nAdd camera angle slider to ingame quad settings\r\nNew shortcut lockout button on the chat dialog\r\nAdded TBS Spec quad\r\nAllow new upload to leaderboard button for track managers\r\nIncrease light levels in empty scene night\r\nFix yaw to be more consistent on micro quads\r\nFix bad lighting on rocks in river2\r\nUpdate countryside vegetation and optimise the scene textures for performance\r\nFix various issues with duplicate gate 1s in track editor\r\nFix deleting all objects on a spline causing duplicate gate 1\r\nAdd Acrobee and Zerograv whoops to the micro pack\r\nFix missing players tags on Beebrain micro\r\nIncrease zoom levels for spectating micro quads\r\nMake track selection remember your scene and track selections (this does not remember filters yet)\r\nAdd clicking on the map in track editor to cancel out of dialogs for save, clear and load track\r\nImprove anti-cheat tools and reporting","publish_date":0,"content_guid":"8720519c-e87c-4fb6-b329-d06e312e181a","content_meta_guid":"ea1e3eee-2a6f-4a40-a159-f82103c910b8","diff_guid":"27830805-bd5e-4e3e-8575-565d3214395f","diff_meta_guid":"55e5a52d-d9db-4236-8d32-c2a90ae06ba5","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-03-01T17:56:01.494Z","processing_finished_at":"2020-03-01T18:26:27.229Z","can_be_imported":false},{"id":31,"label":"1-15-0-1548","changelog":"Fix startup crash","publish_date":0,"content_guid":"4484224c-20a1-4dc7-b923-8757e903a003","content_meta_guid":"d75de335-d3de-45ae-99c8-91261c088950","diff_guid":"4d9b9663-eb33-4022-a79f-3e3e99818f6f","diff_meta_guid":"1e7bf7e6-efcd-4d60-87c8-2cb3d9b9b3c7","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-03-05T23:48:48.617Z","processing_finished_at":"2020-03-06T00:19:34.719Z","can_be_imported":false},{"id":32,"label":"1-15-0-1603","changelog":"Allow use of negative sign in user names without it causing issues with hide id from friends\r\nImprove handling of flying/spectating status and changing the status of players in a session\r\nUse network timers only for checking timning not for actual timing to get the accuracy back into race timing\r\nImprove speed hack detection\r\nStop fog showing up in track editor when it shouldn't be there\r\nFix gate tracking problems when using start finish gate\r\nUpdate spectator mode to be more live stream friendly\r\nSpeed up track and scene selection dialogs\r\nAdd leaderboard viewing into the sim\r\nUpdate side buttons to more visible/modern icons\r\nUpdate asset bundles and reduce memory usage siginifcantly\r\nRemember track selections and filter settings\r\nFix profile 1 and 3 on the TBS Spec quad\r\nFix beebrain wobble when decending off the throttle\r\nFix checking gates with F7 in track editor","publish_date":0,"content_guid":"6c50f926-8e74-4543-a392-9ad276b5437c","content_meta_guid":"8efa1b0b-ca0e-44f0-b168-4890cc7e54f8","diff_guid":"826ad88e-bed0-4e46-a449-86cef2ba0bdd","diff_meta_guid":"05ad116f-c207-42df-9851-4fc1ca5bfbef","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-03-13T17:45:19.155Z","processing_finished_at":"2020-03-13T18:14:57.111Z","can_be_imported":false},{"id":33,"label":"1-15-0-1621","changelog":"Custom leaderboard functionality\r\nDropdown boxes for scene / track selector\r\nSimplification of the multiplayer dialog","publish_date":0,"content_guid":"71a1c47f-cdec-4431-aedb-b0c467287568","content_meta_guid":"cef02f3e-b7ea-43cc-a739-80aa511b8951","diff_guid":"8b98ea5c-46b8-442a-86e9-f36e2de0c750","diff_meta_guid":"efaed111-fd66-4e53-90b0-4a6e0c22e28e","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-03-20T16:41:16.220Z","processing_finished_at":"2020-03-20T17:11:57.079Z","can_be_imported":false},{"id":34,"label":"1-16-0-1705","changelog":"Nemesis Mode\r\nFive 33 Switchback quad added\r\nSingularitum quad added\r\nAllow custom leaderboards in multiplayer and if you saved a track from multiplayer\r\nAdd track name display at top of screen\r\nNew recharge and prop damage gate (no relay function)\r\nStop tracks for scenes you don't own showing in the track selector\r\nAllow locking of multiplayer sessions\r\nFix logos for DDC gate 6","publish_date":0,"content_guid":"0bd3cc15-3e0e-4438-8b2a-08b0f64b4ef1","content_meta_guid":"b6ff08d0-86bb-41cb-bd95-0472f917e1e7","diff_guid":"580dad1b-ea78-427d-88e1-2f8d1cc726ee","diff_meta_guid":"778957e6-1db2-49ac-a63d-2f0fab9ed644","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-04-05T14:00:37.443Z","processing_finished_at":"2020-04-05T14:31:17.700Z","can_be_imported":false},{"id":35,"label":"1-16-0-1734","changelog":"Five33 graphical fixes\r\nNemesis One on One\r\nFixes to nemesis truncated flights\r\nGerman translation updates\r\nFix immediate start mode\r\nLimit Nemesis flights to a maximum of 400 seconds\r\nFix race manager swapping causing scenery load issues\r\nHide loading screen on any network failures during scene load","publish_date":0,"content_guid":"cff35d5c-e396-442c-a4ba-bb226e89f919","content_meta_guid":"d9a6b382-2bdb-43ab-b6b1-0b02756acfd7","diff_guid":"832a6b99-61bb-43b7-b71c-e122f67c1537","diff_meta_guid":"d73f50d5-5a15-4f63-8a31-5fd39de8c0de","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-04-12T10:54:23.800Z","processing_finished_at":"2020-04-12T11:24:59.226Z","can_be_imported":false},{"id":36,"label":"1-16-0-1753","changelog":"Fix relay mode\r\nFix missing lap time announcements in three lap mode\r\nFix manual arming mode\r\nImprovements to nemesis efficiency\r\nImprovements to auto upload for nemesis\r\nLeaderboard export increased to 200 players\r\nZip nemesis flights before uploading\r\nAbility to view nemesis flights\r\nAdd gemfan assets to track editor","publish_date":0,"content_guid":"f4603b43-87a3-4d3d-aa5e-0e5d677e00e0","content_meta_guid":"ccc9eeed-3f6f-413c-8331-76cb5bce14f0","diff_guid":"edc48fa2-4557-412c-89b2-2d18f9a2c535","diff_meta_guid":"45ae22e7-bccd-4be4-95e5-28d26f30604c","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-04-23T16:03:17.601Z","processing_finished_at":"2020-04-23T16:34:10.984Z","can_be_imported":false},{"id":37,"label":"1-16-0-1824","changelog":"Solleva quad added\r\nHandicap racing added\r\nNew drop down for game modes\r\nMake nemesis ghost timing more accurate (0.001 seconds instead of 0.1)\r\nFix leaderboard time uploads\r\nFix some nemesis flight upload issues\r\nFix nemesis not resetting properly on track changes\r\nFix unnamed sessions being given default session id names\r\nFix camera angle slider in game so it updates correctly when making keyboard changes to camera angle","publish_date":0,"content_guid":"bd3ce5f5-6f9c-4f85-b8b0-c0b390c3e877","content_meta_guid":"4fde53e9-2f65-4183-81e6-99c901472252","diff_guid":"5156d949-2f36-49ee-8f7f-ca25a3d04eb0","diff_meta_guid":"79ccfc1d-4ef6-44f8-95c6-f22066338c4f","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-05-03T19:03:13.027Z","processing_finished_at":"2020-05-03T19:32:08.369Z","can_be_imported":false},{"id":38,"label":"1-16-0-1827","changelog":"Minor patch to stop the game mode dropdown disappearing.","publish_date":0,"content_guid":"53df668d-905d-4401-b506-707c11a86b63","content_meta_guid":"73c86e71-9cd6-4a56-9653-0e6e60b879df","diff_guid":"cb0a4a4e-58e2-40c6-92f8-0f93a68ab3a8","diff_meta_guid":"e310e8d9-62d4-4dc9-9734-5692caa53044","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-05-05T16:07:55.988Z","processing_finished_at":"2020-05-05T16:38:28.846Z","can_be_imported":false},{"id":39,"label":"1-16-0-1845","changelog":"Lethal Conception 5\" quad\r\nStop race manager swap loading a blank track if the player swapped to only just saved the track over multiplayer\r\nUpdate session lock so it is only shown and clickable by the race manager and not all players\r\nReload track list when a track is saved over multiplayer so it can be selected immediately\r\nAdd GoPro camera to tools in track editor for static (non tracking) race cameras\r\nFix Gym windows so you can't get through them\r\nSmall update to rates calculation so deg/s more closely align to betaflight rates","publish_date":0,"content_guid":"74314981-5a1e-4a51-81b4-44b9703ed171","content_meta_guid":"e3f5a7d3-c282-4e0f-b091-4277f83acead","diff_guid":"56193c58-5a63-48ac-b24b-180bb50c7368","diff_meta_guid":"b0f8232d-442c-4d2f-b61e-2617c8edc322","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-05-11T12:55:33.769Z","processing_finished_at":"2020-05-11T13:25:21.675Z","can_be_imported":false},{"id":40,"label":"1-16-0-1846","changelog":"Fix track upload breaking the sim, also include recovery code for people who already broke their sims\r\nFix track upload so it assigns a leaderboard id correctly","publish_date":0,"content_guid":"72509194-ddb2-41c3-af91-f6dedddbfbb9","content_meta_guid":"bef574f4-9e55-4dbd-801e-edae4250fca5","diff_guid":"81b8121c-e13c-474b-b210-0aebd8afdf8a","diff_meta_guid":"efb046fe-5c9f-4140-87c9-5a4f03ad8512","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-05-13T22:21:14.753Z","processing_finished_at":"2020-05-13T22:51:14.317Z","can_be_imported":false},{"id":41,"label":"1-17-0-3034","changelog":"VelociDrone 1-17 Update - please see our social media or website for details.","publish_date":0,"content_guid":"9d8533c2-d7e5-4840-9d15-c67836f94e3e","content_meta_guid":"2984f23a-2675-4f7a-8438-d411cacd7346","diff_guid":"7d412fab-a5e5-43e1-8bf6-0ee3c90cfb82","diff_meta_guid":"56112d8a-675b-496a-bab9-2a1736054024","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-09-10T18:21:40.626Z","processing_finished_at":"2020-09-10T19:08:25.194Z","can_be_imported":false},{"id":42,"label":"1-17-0-3081","changelog":"Fix to combat balance teams button so it always works.\r\nStop player colours all changing when changing map - annoying for team deathmatch and capture the flag games.\r\nStop player access to colour change and players in session settings during a combat session.\r\nUpdate to XP so that high skill players get less XP for shooting killing low skilled players and low skill players get lots of XP for killing high skill players.\r\nReset all moving spline objects and synchronise them across multiplayer at race / combat start.\r\nFix spectator camera UI and also stop spectator cameras from flipping out when changing players quickly.\r\nAllow spacebar to be used as fire key in combat - view other players changed to P key in combat mode.\r\nCombat scores on TAB key only - not P key anymore due to above.\r\nFix some incorrect track editor thumbnails.\r\nAdd ammo display bars to the combat ui - type of ammo bar selected in quad settings in the main menu.\r\nSome fixes to mine handling to stop console errors being logged causing some game stutter.\r\nFix rock colliders in future hangar scenes.\r\nFix mobula 6 having red smoke and lightning all the time in flight.\r\nShow time to next combat match when joining a combat multiplayer session that is mid game.\r\nAutomatically enable crosshairs and quad trails at combat start.\r\nTurn off shortcuts when typing URLs into music player.\r\nFix trails randomly turning off in races.\r\nFix tracks in track editor getting deleted during save/testing due to gates on splines issue.","publish_date":0,"content_guid":"7daae2b3-b722-4be0-8646-b495976263bb","content_meta_guid":"32fdaf63-d756-4f34-afa5-2366ddcde774","diff_guid":"0ba0a0d3-2845-4d1d-bccc-028772c47a2d","diff_meta_guid":"ec8bdc17-881b-4544-8bf2-8f6e45681c9f","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-09-17T21:27:08.198Z","processing_finished_at":"2020-09-17T22:25:30.096Z","can_be_imported":false},{"id":43,"label":"1-17-0-3103","changelog":"Fix sportshall not working\r\nFix certain player names breaking combat scoring and race tracking\r\nAdd game type to track name at top of screen\r\nAdd kill notification marker to centre of crosshair\r\nFix some gaps under rocks in future hangar empty\r\nFix crosshair for racing so it is the default small cross\r\nFix crosshair for racing so it stays on screen across scene changes\r\nHide team balance button from non race managers\r\nUpdates to XP to remove XP for own team kills with mines\r\nIncrease network level to protect players from out of date clients breaking sessions\r\nFix F key for line of sight mode","publish_date":0,"content_guid":"b55a78a4-ff07-4acc-b9e2-09686bead390","content_meta_guid":"5d3a5b37-0c43-46d0-a0a7-960f693f689c","diff_guid":"af847308-3b40-4c47-a974-b4925eb1e7fe","diff_meta_guid":"c0d37e91-3549-46de-af4f-c01ae00bdeae","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-09-23T11:22:14.642Z","processing_finished_at":"2020-09-23T12:03:59.811Z","can_be_imported":false},{"id":44,"label":"1-17-0-3214","changelog":"Over 500 new polyworld track editor objects\r\nNew red rocks for track editor (future hangar)\r\nUpdates to UI for combat colour changes\r\nChange reticule with shift H\r\nNew handling of leaderboard tracks so they are not network transmitted\r\nChange dominator air mode default to on\r\nRemove combat powerups from display in race modes\r\nStop reset button from functioning in deathmatch (above 1mph)\r\nFix multiplayer join error hanging the sim\r\nUpdated the network level","publish_date":0,"content_guid":"7f5ca88c-7326-4539-8e71-46fc3fd8093a","content_meta_guid":"d0520bc3-c16a-4c59-9e93-be83b632b49e","diff_guid":"4eac526d-ea34-4f7b-8394-8d640b66d5c0","diff_meta_guid":"3950f81f-a958-4083-928c-669e4e4b94ab","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-10-27T19:09:21.006Z","processing_finished_at":"2020-10-27T19:51:20.581Z","can_be_imported":false},{"id":45,"label":"1-17-0-3215","changelog":"Fix issues with players joining during a race / combat session","publish_date":0,"content_guid":"1697b3a7-4e35-47bc-af40-947b79d6b66f","content_meta_guid":"29ac84d0-5b85-4691-b5c0-541342705b86","diff_guid":"a97ff038-47c3-49c9-9105-c225f2a421e8","diff_meta_guid":"413c0f22-ac5f-4e23-b83c-0b2c94f89449","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2020-10-28T13:57:38.547Z","processing_finished_at":"2020-10-28T14:38:19.163Z","can_be_imported":false},{"id":46,"label":"1-17-0-710","changelog":"New aerodynamics for racing quads\r\nSome scenes retired from usage:\r\nRedBull Ring (removed)\r\nWareHouse (removed)\r\nNight Factory (removed)\r\nFlight Control:\r\nBetaFlight upgraded to 4.2\r\nFeed forward and D min/max etc added to betaflight UI\r\nAll rates systems added - FL1, Kiss, Actual Rates etc\r\nTrack Editor:\r\nUpgraded track editor to latest version\r\nVertex snapping\r\nGrid snapping\r\nNew gizmos for editing - stretch tool, clone tool (do not use this for gates), multi tool\r\nNew scene movement controls\r\nToothpicks added:\r\nDiatone GNB 339\r\nBetaFPV HX 115\r\nBetaFPV Twig XL\r\nUpdate all scenes with new shaders and updated graphics\r\nNew Micro Pack Scenes: \r\nSportsbar\r\nOffice\r\nApartment\r\nMini Warehouse\r\nNew Racing Quads:\r\nJunior Racer (Micro Pack)\r\nSkyX Killer\r\nPantherMM\r\nMad Lite\r\nCatalyst Machine Works Tazmanian (Mega Class Pack)\r\nNew Combat Scenes:\r\nDynamic PolyWorld\r\nCombat Canyon\r\nCombat Practice Mode added with leader board\r\nCombat weapons update: volt shot, pyro shot and ice shot timings, ammo and projectile speeds updated, missiles accuracy based on difficulty mode selected\r\nNew combat game mode (control)\r\nImprove simulator memory usage massively\r\nImprove load times and scene load efficiency\r\nImprove terrain texturing\r\nImprove overall performance in many scenes\r\nUpdate to latest multiplayer network\r\nNew global chat on multiplayer menu\r\nNew music, new button sound effects\r\nFully updated UI and reskin of UI\r\nNew main menu scene with drone race in background and drone racing sounds\r\nUpdates for freestyle pack (new freestyle start grid for freestyle mode)\r\nNew side buttons and functionality when using freestyle mode\r\nUpdated camera interference shaders\r\nCamera interference random or by distance from start grid\r\nDistance from start grid mode takes note of height and terrain signal occlusion for vtx interference\r\nShadows now separately controlled via the screen settings menu rather than by quality mode selected - so you can now run fantastic quality but with no shadows if you wish.\r\nMany small fixes and improvements to existing production simulator.","publish_date":0,"content_guid":"22eb78fc-4101-4d8e-9c2a-02be71e89a8e","content_meta_guid":"e935b2be-3791-42b7-b587-dd5645742471","diff_guid":"a60c9c99-659f-423b-80d5-6bfb7887b5e9","diff_meta_guid":"20737836-37b0-4084-bee0-f34f0fd4a7bd","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2021-08-03T01:25:06.227Z","processing_finished_at":"2021-08-03T03:00:23.567Z","can_be_imported":false},{"id":47,"label":"1-17-0-722","changelog":"Fix multiplayer issue where a joining player stops the race.\r\nFix missing colliders in track editor for multiple objects\r\nFix true lens giving white/black screen on some tracks\r\nFix white box in players in session panel\r\nFix manual data entry on RC rate\r\nFix flight controller disconnects at low throttle\r\nRemove tree/wind sounds in red valley\r\nFix missing gun colliders in Island\r\nAdd some black outlining to the car button in drift track\r\n4:3 and 5:4 aspect ratio UI fixes\r\nAutomatically set CPU usage to high when a freestyle quad is loaded","publish_date":0,"content_guid":"8cc8981f-b554-4d62-a5d2-09fa67062396","content_meta_guid":"17002773-d746-476f-8410-d96b9614d0eb","diff_guid":"f7be05de-069b-422f-b51c-612c9708f945","diff_meta_guid":"2e13591c-c236-480f-9aef-004fdcee3564","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2021-08-07T11:55:40.688Z","processing_finished_at":"2021-08-07T12:50:09.417Z","can_be_imported":false},{"id":48,"label":"1-17-0-750","changelog":"Fixes for quad flutter/vibration\r\nTighten up the pid response so that rolls/flips are crisper\r\nImprove low throttle roll/flips\r\nRemove fisheye effect in track editor\r\nAllow the sim to control low throttle point (no longer user set)\r\nAdd fmod branding to start up screens\r\nImprove 533 switchback CG\r\nUpdate track editor shortcuts\r\nFix Diatone 339 ghost (remove collider and fix visuals)\r\nAllow LOS camera height to be user defined\r\nIncrease LOS camera zoom range\r\nFix multiplayer friend list\r\nIncrease multiplayer session line spacing to stop text data overflow\r\nFix players-in-session scroll bar\r\nFix some boxes not going transparent when scrolling the multiplayer session list\r\nRemove GPU instancing from Main Menu","publish_date":0,"content_guid":"96c21551-1ec1-4ace-8f13-8e74b837006c","content_meta_guid":"002caf18-79b6-4f66-a4f8-ae61748dfc50","diff_guid":"aeec0917-4a55-46c3-b942-19417195a0cb","diff_meta_guid":"2927be60-1d00-470a-bf9a-6113e7afd2c3","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2021-08-20T09:03:55.056Z","processing_finished_at":"2021-08-20T09:58:15.576Z","can_be_imported":false},{"id":49,"label":"1-17-0-896","changelog":"Fix spectator cam positions in island scene\r\nAdd video camera selection to quad settings (affects freestyle quad weight) - instead of having to set the weight manually yourself using the weight slider\r\nFix a bug in in-game quad settings to stop min throttle being changed to a default value\r\nAdd \"quad type\" dropdown to the add quad selection, so only drones of a particular type will be displayed\r\nUnload unused assets when a new track is loaded (memory saving)\r\nFix calculation of player numbers and problems setting players from spectator to flying\r\nFix picture overlay track editor object from displaying incorrectly (rotated)\r\nFix some tree LODs to reduce tree popping\r\nAdd Armattan Marmotte, FPVCycle Glide, iFlight Cidroa, SupaFly FlipMode, SupaFly Juice Mode, AOS 5.5, TBS Source One, DJI Quad (DJI Quad will be enabled in 7 days time) - freestyle pack\r\nAdd Chief and SniperX race quads (all users)\r\nAdd some protections for selecting invalid cameras for non existent quads (left the session)\r\nAdd new weekly time trial functionality\r\nAdd Office Complex Scene - freestyle pack\r\nAdd export for handicap data\r\nUpdate car button in Drift Track to show cars that are active\r\nAdd track rating button to end race dialog\r\nShow track ratings for official tracks on mouse over in scene selection (if they have a rating)\r\nUpdate download track dialogs to show highest rated tracks (with ratings counts)\r\nIncrease combat flag sky beam length\r\nFix LODs on subway trains\r\nFix River2 graphical artefacts when using true lens\r\nUpdate freestyle and racing quad low end throttle to give better low throttle control\r\nFix some floating containers in island scene\r\nAdd new nemesis track line functionality - display any quads flight path, display your own flight path, analyse your path against any other players \r\nFix a problem where a blank track was loaded for some multiplayer clients on track change","publish_date":0,"content_guid":"95779aff-0dab-4e85-bcd4-355f8dbef7d7","content_meta_guid":"625e05bc-d687-40a1-8a8d-104ac3ec3df3","diff_guid":"ea2df5d7-1647-4bc0-a619-333ff4892cbe","diff_meta_guid":"e46c41ae-2e98-47a9-aa95-6a25c50c6771","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2021-10-11T11:41:08.779Z","processing_finished_at":"2021-10-11T12:37:22.761Z","can_be_imported":false},{"id":50,"label":"1-17-0-901","changelog":"Fix weekly time trial not setting the correct race mode\r\nFix pause / lag at end of race\r\nFix incorrect track load happening when an official track fails to load\r\nAdd combat and freestyle to the class filter dropdown in scenery selection\r\nFix video camera not being set correctly in main menu on freestyle quads\r\nFix \"All Tracks\" displaying no longer loadable tracks","publish_date":0,"content_guid":"d4f7b295-64e5-432a-a03c-74f404eedfb0","content_meta_guid":"bd3fd94f-506b-45a7-92ee-fa2faa0014f6","diff_guid":"2189adda-468f-46ab-8efc-7387901d7898","diff_meta_guid":"0ef95238-04c2-4b51-b166-260b9b92043f","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2021-10-14T12:19:35.115Z","processing_finished_at":"2021-10-14T13:15:16.601Z","can_be_imported":false},{"id":51,"label":"1-17-0-916","changelog":"Improve simulator load time\r\nAdd option to enable/disable frustum culling on true lens for freestyle scenes\r\nAdd VRL gates\r\nUpdate keyboard shortcuts\r\nFix multiplayer sessions updating incorrectly on server region changes","publish_date":0,"content_guid":"14f38d76-6d54-4d31-a405-0e4b6ceb4289","content_meta_guid":"77f704c3-cdc5-4603-8d59-170d1266071a","diff_guid":"1a4ae70b-bf98-4e41-92df-354fa1ac870c","diff_meta_guid":"71724464-f592-450a-8972-b58c71329cf7","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2021-10-20T22:47:54.988Z","processing_finished_at":"2021-10-20T23:43:39.126Z","can_be_imported":false},{"id":52,"label":"1-17-0-938","changelog":"Night Factory 2 (new scene)\r\nAllow gates to be assigned numbers directly in track editor\r\nMake quad line/paths match the quad size being flown\r\nFix relay mode so it doesn't let everyone fly off the grid at race start\r\nFix sports hall baked lighting\r\nFix to shield colours in combat (some combat modes they were shown incorrectly)","publish_date":0,"content_guid":"9008a482-b07f-4a49-b360-a8716f8f8cd6","content_meta_guid":"5b4b520c-6fe9-4e05-a38e-adaad7d62b6a","diff_guid":"ff36f66f-49fa-4f2e-8925-78683ae5922b","diff_meta_guid":"49faec5f-083e-42b6-a3df-dd9d0d6b9d90","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2021-11-17T01:11:39.822Z","processing_finished_at":"2021-11-17T02:09:04.337Z","can_be_imported":false},{"id":53,"label":"1-17-0-298","changelog":"VelociDrone Release Notes - March 2023 Release\r\nFully updated and new UI designed by a professional UI developer.\r\nNew Native Apple Silicon client for running on Apple M1/M2 processors.\r\nQualify mode for 3 lap racing - in this mode you get ten starts of a race to upload your time, it does not matter if you finish those races, you get ten starts only to set your time.\r\n\r\nFactory - a new industrial warehouse scene. Race around a brightly lit mostly empty, high quality warehouse style environment.\r\nNew Ship Port and Apocalypse maps in low poly style - these new maps are part of the coming mobile velocidrone release and are provided for desktop.\r\nIsland (Freestyle pack) - complete remake of the island to make it a much more satisfying map to fly freestyle or create tracks on.\r\nCountryside - huge rework of the countryside map, much higher quality vegetation assets, much more height diversity in the terrain, white water rapids river section and high quality wooded areas, two radio antennas to dive.\r\n\r\nReclassification of Empty PolyWorld and Dynamic Polyworld as no longer being Combat pack specific and open access to everyone. This is for racing purposes on velocidrone mobile - access to these scenes will not let you play combat unless you have the combat pack.\r\n\r\nFrame rate capping - you can now control your frame rate (with vsync off) with software based frame rate capping. Set your preferred fps and velocidrone will try to manage your fps to that level (assuming your graphics card is capable of running at that level).\r\n\r\nFreedom Spec quad - The Five33 Switchback Zero is offered in 3S form for Freedom Spec racing.\r\nStreet League - Fly a Project 399 Prig, MadKwads MadOpen, Kauri-H, Five33 Spec 7 or TBS Source One 7” in Street League configuration.\r\nNew 5” 6S Quads - Open Race Pro, Fox Racing V1, Southeast FPV Typhon\r\n\r\nUpdates to scenery, lighting and design of multiple existing scenes. Incorporating upgraded vegetation and higher quality scenery assets.\r\nDownloading new “verified” tracks (official tracks) no longer requires a simulator restart in order to see them in your track list.\r\nSupport for velocidrone mobile - track building for the new mobile maps and cross system racing via nemesis.\r\nSupport for LeagueOS websocket communication for streamers.\r\nThree levels of decreasing complexity for the in game heads up display (Normal down to minimal UI) to decrease screen UI clutter when racing.\r\nNew track editor layout tool that will give you a spreadsheet printout for accurately laying out your simulator track in real life.\r\nNumerous other quality of life improvements, to the UI, scenes and tracks.\r\n\r\n\r\nFixes\r\nUpdate to immediate start to reduce quad instability on reset.\r\nUpdate to multiplayer race start to do a double release to try to avoid quads getting stuck on the start grid at race start.\r\nEfficiency updates to the sim controller code to reduce CPU overhead.\r\nFix missing resolutions and inability to select resolutions in screen settings for M1/M2 Apple Silicon running through Rosetta (but ideally these users should change to the Native Apple Silicon client).\r\nLots of other minor fixes and efficiency updates to the overall code base.","publish_date":0,"content_guid":"92f623b3-625d-476d-969d-b41e2228ea94","content_meta_guid":"57eb270a-4fbf-4b4b-ab30-d7260a210dc2","diff_guid":"aa0025f5-f74b-44f8-80d6-71147098f419","diff_meta_guid":"11fd48eb-2b7a-418a-ad94-62f7b9bc2391","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2023-03-07T16:37:50.385Z","processing_finished_at":"2023-03-07T18:06:20.505Z","can_be_imported":false},{"id":54,"label":"1-17-0-303","changelog":"Fix fisheye for all scenes\r\nTurn off fog in dynamic weather for fisheye (same as true lens)\r\nRearrange in game UI to move things more out of eye line\r\nFix motion blur to be off automatically in scenes that don't support it\r\nFix future hangar and future hangar empty rock formations\r\nFix water for true lens in Island\r\nFix high speed vibrations of freestyle and racing quads\r\nRemove 5 second lag spike when using frame capping\r\nFix player tags (highlight box and player name) to be more visible on spectator cams\r\nFix esc key so it closes open dialogs as well as the main menu dialog\r\nSome font updates for better readability\r\nFix nemesis player background colour\r\nFix delta time message to be higher up the screen and only on screen for 2 seconds\r\nFix the \"your time is slower\" dialog so it cannot open in auto upload\r\nFix river reflection for low quality water in river 2\r\nUpdate island audio sources to be off if the volume sfx slider is at zero\r\nRemove some allocations that were causing lag spikes\r\nSome lighting fixes to Countryside","publish_date":0,"content_guid":"a9790c7f-461c-4332-ac4c-fa4ffb57ac5e","content_meta_guid":"85379a67-07a4-478c-86d9-7f2b54b6dad3","diff_guid":"bd6d2d4b-75e4-4583-ae7b-b701b91e7836","diff_meta_guid":"7b052569-89c4-4cd8-8e44-3a1fd6771121","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2023-03-10T19:12:16.456Z","processing_finished_at":"2023-03-10T20:07:01.894Z","can_be_imported":false},{"id":55,"label":"1-17-0-321","changelog":"Add track highlighting to the track list to aid navigation\r\nFix J key to open track leader board\r\nAdd shift P key for opening players in session dialog\r\nAllow clicking magnifying glass to initiate search in main track list\r\nShow the track ratings count in the track list\r\nExpand leader board dialog rows so it no longer needs to be scrolled to see all entries\r\nFix music player button\r\nOptimise race status display to display from bottom up and also minimise to a smaller size using Q key\r\nMove race display lower on the screen so that in single player the players name is not mid screen\r\nHighlight the players name and time in track leader board display\r\nAdd font outlining to player names in the end of race display so lighter colours are readable\r\nAutomatically remove old databases that cannot be upgraded during start up after upgrading the simulator\r\nAdd low poly recharge gate to the mobile gates track editor list\r\nUpdate flags in apocalypse scene\r\nFix lighting and mesh positioning in Bando scenery\r\nUpdate combat spectator display so player names can be clicked to swap between players, re-enable P key functionality in combat\r\nUpgrade combat spectator display to clearer and more readable fonts\r\nFix bench colliders in City scene\r\nHide multiplayer chat along with the start button when mouse hide is enabled\r\nFix dynamic weather fog positioning\r\nFix missing collision on a wall in Industrial Wasteland\r\nFix quality settings (Fastest / Fast / Simple / Good / Beautiful / Fantastic) so that lower settings yield expected fps gains\r\nFix air mode being defaulted to off despite being turned on in the settings\r\nFix position 7 not being displayed correctly in the race positions display\r\nFix Players in Session Panel not allowing access to all players in a large lobby\r\nAdd to the hide mouse contextual help that it also hides the start button","publish_date":0,"content_guid":"a40ae472-9010-4736-8d39-79f4dfa470da","content_meta_guid":"2693e861-cfec-4fde-83e4-55857767a298","diff_guid":"2568ef90-e0fc-45f2-8a98-eeba8170292c","diff_meta_guid":"34cc0fdc-1d71-4aa0-bf5d-918e70fc93a9","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2023-03-17T03:38:14.430Z","processing_finished_at":"2023-03-17T04:30:50.769Z","can_be_imported":false},{"id":56,"label":"1-17-0-323","changelog":"Fix water for track editor made tracks\r\nFix mines exploding in combat continuously\r\nFix button order on \"hide mouse pointer\" option","publish_date":0,"content_guid":"222cd86a-d75b-4a0b-bedc-7da1c28e8056","content_meta_guid":"a8db625c-98a6-49d1-98b3-b3b2dc83a29d","diff_guid":"2f13efa0-d079-4481-b972-f2e1b82fe238","diff_meta_guid":"9f874fe8-a7c5-4a86-9ea8-61501c10b8bd","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2023-03-17T18:19:03.566Z","processing_finished_at":"2023-03-17T19:12:37.100Z","can_be_imported":false},{"id":57,"label":"1-17-0-339","changelog":"Fix angle mode\r\nFix nemesis quad colours\r\nFix air mode being set to off on the default oblivion after installation\r\nUpdate freedom spec minimum throttle to allow better control response at low throttle\r\nSignificant texture optimisations to improve memory performance and overall fps (multiple but not all scenes affected)\r\nUpdate vegetation renderers\r\nAdd new options for chat hide to screen settings\r\nAdd new offset minimal UI option (Q key)\r\nFix races not completing in Office Complex\r\nFix deferred rendering in Empty Polyworld\r\nFix incorrectly initialised screen settings (vtx interference / controls polling) on M1 macs\r\nUpgrade Unity to latest LTS release","publish_date":0,"content_guid":"9d8a922d-1cd9-4d8f-b2cc-dbcdbf30eaac","content_meta_guid":"4b98d15f-0aa4-4d03-a309-29356fbcb5e6","diff_guid":"2b101c76-af0a-4fd0-ab60-0c1fcedc0217","diff_meta_guid":"d04a2e1a-687b-418f-92ab-23b9c01dc4b5","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2023-03-23T20:26:06.817Z","processing_finished_at":"2023-03-23T21:17:59.720Z","can_be_imported":false},{"id":58,"label":"1-17-0-340","changelog":"Fix \"chat hide\" screen settings menu option","publish_date":0,"content_guid":"1f75fd4d-e99d-44bc-982b-9720f5da0aa3","content_meta_guid":"e0a8f2fd-6a41-45c7-9f08-20c9889bc95f","diff_guid":"b250eef0-a352-45b7-88f6-0f7275fde37f","diff_meta_guid":"1759336d-b814-4dc8-b854-84355acaf49b","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2023-03-24T01:07:53.068Z","processing_finished_at":"2023-03-24T01:55:10.578Z","can_be_imported":false},{"id":59,"label":"1-17-0-348","changelog":"Update sports hall lighting to fix shadows issue in deferred rendering\r\nUpdate race positions dialog to have coloured text and coloured highlighting\r\nAdd some extra UI for time attack toggling so it is easier to see the selected mode\r\nFix scrolling for 10 laps of data in the race leaderboard dialog\r\nAutomatically remove old databases that will cause issues running the latest simulator version","publish_date":0,"content_guid":"8a97daf0-faf0-45ca-a754-8a5fb32f3ada","content_meta_guid":"3b5afc4e-1886-41d5-adbd-1a86d444b085","diff_guid":"720b38d2-38d8-45a0-a9d0-e5eed3ece977","diff_meta_guid":"9b302e20-1295-4542-8b67-cf5c488d9029","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2023-03-31T16:06:30.789Z","processing_finished_at":"2023-03-31T16:55:22.326Z","can_be_imported":false},{"id":60,"label":"1-17-0-514","changelog":"NOTE: This update does increase the network level in the simulator, so if you do not update you will not be able to see sessions in multiplayer for those running the update and likewise they will not be able to see your sessions\r\n\r\nGame Engine Updates:\r\nUpdate to the next stable long term support version of Unity Game Engine.\r\n\r\nNew Scenes:\r\nTech Facility added - which is a futuristic space station type scenery\r\n\r\nNew Features:\r\nAdd category filter for leaderboards to allow racing in nemesis or other modes against just quads of the same category (5inch, street league etc)\r\nAdd RPM limiter for Street League and Freedom Spec\r\nAdd boost mode for Street League\r\nUpdate race analysis capability\r\n- new UI in nemesis mode that allows turning on / off of race lines for quads\r\n- view your last raced line, your fastest line or the lines of each individual competitor in nemesis\r\n- Automated camera following for analysing race lines\r\n- Static camera, follow camera and camera zoom ability on automated race analysis cameras\r\n- view 1 lap or all 3 laps for any individual quads race line\r\n- Race playback smoothed or unsmoothed\r\nAdd new track categories for all verified tracks - plus use those categories for any newly uploaded user tracks\r\nAllow track sorting in the track list by track category (beginner, intermediate, advanced, combat, freestyle, street league etc)\r\nAllow track sorting by date added to your database\r\nFully optimised track list that responds instantly to category filters\r\nImproved loading times\r\nAdd controls reversing to the controller setup wizard\r\nUpdate water systems to use a new higher quality water when high quality water is selected\r\nAdd Ukrainian Language Translation\r\nAdd sign user out option to the main settings for computers that are used in schools / training rooms\r\nFully update the internal websocket code to work for tracking racing data over a websocket for people streaming races who want full data analysis\r\nAdd hole shot stats to the race (quick status message) and race end panel\r\nAdd two new invisible gates\r\n- straight flag pole\r\n- offset gate to allow you to fly either over or around the side of a split-s style gate\r\nUpdate quality settings to make fantastic mode have longer level of detail distance (less popping of scenery assets)\r\nUpdate vegetation levelk of detail distances in freestyle pack maps to reduce vegetaion popping\r\nUpdate Football Stadium lighting to increase frame rate performance\r\nUpdate lighting across all scenes to where possible maximise frame rate\r\nImprove lighting in construction scene so that the camera has light sensitivity and will adjust for dark areas (like inside the buildings)\r\n\r\nNew Quads:\r\nFox Crooked 5\"\r\nSlicer SR5 5\"\r\nFive 33 LightSwitch 5\"\r\nFive 33 MidMount 5\"\r\nHeavy Metal Street League\r\nSuper 70 Street League\r\n\r\nNew Track editor Objects:\r\nNew sci-fi gates / barriers in the Tech Facility styling\r\nNew Coloured block primitives\r\nDDR Flag and gate\r\n\r\nFixes:\r\nFix motion blur in industrial wasteland\r\nFix incorrectly positioned true lens gate indicators on some inflatable gates\r\nStop track names getting incorrectly URL encoded\r\nFix track naming to properly allow spaces\r\nStop showing the existing time is faster message in auto upload mode\r\nFix 5:4 resolution not displaying the track list correctly\r\nImprove Street Legaue flight dynamics to allow more side slip\r\nFix track editor lighting to correctly use the post processing for the edited scene\r\nFix Island scene graphical issues for trees and water on OSX / M1 OSX machines\r\nAdd korean and japanese font fallback support\r\nAllow quad reset in manual arming in combat if carrying the flag in capture the flag mode\r\nFix overlayed / glitching scenery tile on PolyPorrt scene\r\nFix to restricted join mode which was not working correctly\r\nFix end of race panel missing the race stats for the previous flown race\r\nFix import / export not exporting the track category data\r\nFix importing a track that is missing track category data\r\nFix missing resolutions on M series Macs - if resolutions cannot be read from the processor load a default set of common supported resolutions\r\nFix subway train lighting\r\nFix a multitude of various combat bugs / issues so that combat sessions run more smoothly","publish_date":0,"content_guid":"48a2bb80-50b9-4dc1-9e71-5aacf9277377","content_meta_guid":"e23504f7-ad4f-48fb-bf30-dfd7047b64d7","diff_guid":"1f23b51f-dabe-4779-b172-1610c942d103","diff_meta_guid":"2b65a542-6a29-4535-97ef-eaa2feadb362","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-01-11T12:13:09.551Z","processing_finished_at":"2024-01-11T13:24:34.672Z","can_be_imported":false},{"id":61,"label":"1-17-0-517","changelog":"Fix for graphics artefacts in Coastal and Island scenes when using true lens\r\nFix UI hang in TechFacility when accessing the track change dialog","publish_date":0,"content_guid":"863d21a9-da15-405c-8a4c-36ecf6668831","content_meta_guid":"acd6ac80-58dc-44da-aea6-4a22b01e9574","diff_guid":"12a909c7-50ef-4b05-a811-e1da11524c11","diff_meta_guid":"628e7688-55dd-4246-894e-cf83c4f05d53","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-01-11T19:39:06.901Z","processing_finished_at":"2024-01-11T20:43:55.895Z","can_be_imported":false},{"id":62,"label":"1-17-0-520","changelog":"Fix ranking in multiplayer to not rank fully aborted races\r\nFix two birch trees that were moving in tracks due to LOD issues\r\nFix hole shot to only message hole shot once in a race\r\nFix true lens in dynamic weather incorrectly rendering the cloud layer when draw distance was less than high setting\r\nTech facility hangar force shield fix","publish_date":0,"content_guid":"07f56c45-0a85-4915-b7ab-dca135395562","content_meta_guid":"d3346d53-0124-47b6-838f-3b0e5ae3d136","diff_guid":"b46c99b0-73d3-45a9-9f44-7d0cc01eba37","diff_meta_guid":"a7259a5b-4dbe-49a7-a37c-ce8b6ff5d8ab","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-01-12T20:28:20.933Z","processing_finished_at":"2024-01-12T21:29:15.124Z","can_be_imported":false},{"id":63,"label":"1-17-0-534","changelog":"Fix Line of sight mode and spectator cameras not working when you are using true lens\r\nFix Race Analysis not working and tracking quads when you are using true lens\r\nFix water in coastal scenery for M series Macbooks so they no longer crash when loading that scene\r\nFix lap slider so it always shows the correct laps when changing tracks.\r\nAdd some protections for track managers so an invalid time trial track doesn't get uploaded\r\nAdd new experimental follow cam to dynamic weather - see coming VRL live stream to see this new camera in action","publish_date":0,"content_guid":"ec617df5-91a5-4e18-8f67-6b0c772982ba","content_meta_guid":"94376e94-9cf2-4c02-adc8-8755821ae4a7","diff_guid":"b1064710-6921-496d-aea2-dd886f35dce2","diff_meta_guid":"72e2ab96-d27b-4c3b-8f21-cad7884d1cd1","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-01-18T19:38:15.299Z","processing_finished_at":"2024-01-18T20:46:31.677Z","can_be_imported":false},{"id":64,"label":"1-17-0-541","changelog":"Fix download data hang that was affecting a minority of players when running nemesis\r\nFix upload of a Time Trial for track managers\r\nIncrease tree \"grow in\" distances so that the appearance of trees is less obvious\r\nFix some negatively scaled colliders on sci-fi gates\r\nAdd follow cams to countryside and dynamic weather (experimental feature)\r\nFix ghost data dialog so that if you try to play back an empty ghost flight it doesn't leave the dialog but just issues an error message\r\nUpdate collider on the Prig to be less obvious when trying to launch\r\nFix the lap slider not getting reset to 3 laps when loading a 3lap race mode\r\nFix spectator cams getting messed up if you try to cycle cameras extremely quickly\r\nAdd new more complex water objects to the track editor effects section","publish_date":0,"content_guid":"1fba475c-85a5-4a71-904a-14079a78ad35","content_meta_guid":"e06fb27e-1c4d-4699-81f8-37341e4b4aa0","diff_guid":"b4706972-2b94-4490-b073-b73dc6bc2edb","diff_meta_guid":"3aa1f2e6-a9e3-4198-b07e-10ab3f2a59b3","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-01-29T15:49:52.902Z","processing_finished_at":"2024-01-29T16:51:48.785Z","can_be_imported":false},{"id":65,"label":"1-17-0-542","changelog":"Fix favourite track icons not getting initialised correctly  when scrolling the track list.","publish_date":0,"content_guid":"d19a926a-3019-4095-b81e-891951fb0bc2","content_meta_guid":"947be33a-4404-4d28-916a-1ed8251a8156","diff_guid":"0e20d59f-f190-4ef6-911a-2ab13cbbbaa6","diff_meta_guid":"9f595427-80a5-46a3-a3b0-2d0e44e234f7","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-01-29T21:13:07.639Z","processing_finished_at":"2024-01-29T22:13:30.068Z","can_be_imported":false},{"id":66,"label":"1-17-0-551","changelog":"Increase bounds for disqualification on start grids\r\nDecrease drop height on KDRA start grid to stop quads falling off \r\nFix missing dynamic reflection probe in Night Factory 2\r\nFix splines so they detect track objects and the spline line shows correctly above the scenery ground\r\nFix a lowpoly trackeditor window that you could not fly through\r\nAdd follow camera functionality to all scenes\r\nFix some tree layer assignments for GPU instancing\r\nFix light glows for nemesis quads (fox crooked and lightswitch)","publish_date":0,"content_guid":"dca572b9-67f0-4f3b-878a-e0f05156f596","content_meta_guid":"f42602df-211d-4b33-9ac3-3bc49a6a8b44","diff_guid":"3cabfc10-0172-4278-84f0-26cc180e96e9","diff_meta_guid":"ae3b88ef-92f6-45c0-ba79-aa9b00f1798d","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-02-09T23:32:14.684Z","processing_finished_at":"2024-02-10T00:33:06.575Z","can_be_imported":false},{"id":67,"label":"1-17-0-628","changelog":"Feature Updates / Additions\r\nUpdate laps in two minutes mode to be \"laps in minutes\" and you can now set the time to be between 1 and 10 minutes\r\nAdd crash sounds for if you strike a prop\r\nAdd a message when you go to race mode if your controller is not connected or unconfigured\r\nAdd a permissions check at simulator startup so it won't run if you have put the simulator folder in a permissions restricted directory (and gives you a message as to what to do).\r\nUpdate track editor object selction to be three columns of objects to select \r\nIncrease track editor objects from approx 2000 objects to approx 10,000 objects\r\nAdd custom lighting to track editor\r\nAdd material selection to track editor\r\nAdd decals to track editor\r\nAdd huge bando building pack to track editor\r\nAdd new custom inflatable gates where you can set the logos on the gates to a custom material designed by you \r\nChanges / Bug Fixes\r\nFix combat pack not working properly for new users and needing us to manually update accounts for it to work\r\nFix butterly evo quad facing the wrong way on startgrids\r\nFix camera clipping when playing back a nemesis flight (problem where you just see inside a quad canopy the whole flight)\r\nFix two logged (non fatal) errors that don't need to be recorded to the log\r\nFix KDRA startgrid to stop quads falling off of it\r\nFix track object category selector so it no longer needs to be scrolled","publish_date":0,"content_guid":"7e3cd08a-bf3d-4af2-9f88-57239d1785ee","content_meta_guid":"fff39e66-62bf-4ac8-903b-51a803bcf1a5","diff_guid":"922ce819-e603-41c5-9bbe-50c620843a51","diff_meta_guid":"f61b5f2f-c010-49e6-97d4-83357b16d513","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-04-17T20:09:54.135Z","processing_finished_at":"2024-04-17T21:23:50.244Z","can_be_imported":false},{"id":68,"label":"1-17-0-645","changelog":"Migrate simulator api to velocidrone.co.uk\r\n\r\nFix decal on a custom logo gate that was misaligned\r\nFix wind settings so they consistently update andf apply, inmcluding across multiplayer. Add wind to scenes that were missing it.\r\nAdd code to detect controller connect after leaving main menu and stop the warning message re-appearing.\r\nFix lighting on nemesis quads - fox crooked and lightswitch\r\nAdd server based multiplayer authentication to keep unlicensed players out of multiplayer\r\nChange quad selection so it shows all quads (including ones you don't own premium content for)\r\n\r\nThis is a required update - not updating will result in your simulator being cutoff from server access.","publish_date":0,"content_guid":"78d8842d-9440-4b0b-aa57-cf8d98558c49","content_meta_guid":"f553c5a1-7fcf-434e-8508-f65e7bd54028","diff_guid":"2d7bcbd6-d677-4f5f-98f8-165f33201716","diff_meta_guid":"12510d69-589f-44c2-9d9e-47891bc6bc47","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-06-04T10:53:33.618Z","processing_finished_at":"2024-06-04T11:58:22.114Z","can_be_imported":false},{"id":69,"label":"1-17-0-652","changelog":"Bug fix for race mode changes.","publish_date":0,"content_guid":"b4c2d798-677a-4588-a053-d6d92117d25c","content_meta_guid":"9e7a4227-6ebe-4af8-9c24-56da0c414ae8","diff_guid":"94e16932-092c-40ec-bf18-1b3224e529b4","diff_meta_guid":"d28c8c1b-4d4d-4cd6-954e-9a6e2e91c0a2","draft":false,"pending_publish":false,"published":true,"publish_progress":1.0,"main_executable":"velocidrone.x86_64","main_executable_args":"","ignored_files":null,"publish_when_processed":false,"processing_started_at":"2024-06-20T11:32:34.584Z","processing_finished_at":"2024-06-20T12:33:59.888Z","can_be_imported":false}]</pref>
	<pref name="27fe2446d97f044f7b189bcd7ab46d3b-app-display-name" type="string">VmVsb2NpRHJvbmU=</pref>
	<pref name="Screenmanager Fullscreen mode" type="int">3</pref>
	<pref name="Screenmanager Is Fullscreen mode" type="int">0</pref>
	<pref name="Screenmanager Resolution Height" type="int">400</pref>
	<pref name="Screenmanager Resolution Use Native" type="int">0</pref>
	<pref name="Screenmanager Resolution Width" type="int">600</pref>
	<pref name="UnitySelectMonitor" type="int">0</pref>
	<pref name="unity.cloud_userid" type="string">YmQzMmNiOWVkY2U2ZjJmNGU4ZGY5NTA0NjMxNjM0ODM=</pref>
	<pref name="unity.player_session_count" type="string">MQ==</pref>
	<pref name="unity.player_sessionid" type="string">MjAxNjk2NDk0ODg2MDQ1NDQ2Ng==</pref>
</unity_prefs>